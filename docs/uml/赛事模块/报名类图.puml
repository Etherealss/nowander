@startuml
skinparam linetype ortho
class RegisterController {
    + void registerCompetition(Long contestantId, Long competitionId, Map<String, Object> registrationData)
    + void CancelRegisterCompetition(Long registrationId)
    + void updateRegisterData(Long registrationId, Map<String, Object> registrationData)
    + List<Competition> findAllRegisteredByContestantId(Long contestantId)
    + List<Contestant> findAllContestantsByCompetitionId(Long competitionId)
    + void updateRegistrationState(Long registrationId, RegistrationState state)
}

class CompetitionRegService {
    + void registerCompetition(Long contestantId, Long competitionId, Map<String, Object> registrationData)
    + void CancelRegisterCompetition(Long registrationId)
    + void updateRegisterData(Long registrationId, Map<String, Object> registrationData)
    + List<Competition> findAllRegisteredByContestantId(Long contestantId)
    + List<Contestant> findAllContestantsByCompetitionId(Long competitionId)
    + void updateRegistrationState(Long registrationId, RegistrationState state)
}
class CompetitionRegRepository {
    + void registerCompetition(Long contestantId, Long competitionId)
    + void CancelRegisterCompetition(Long registrationId)
    + List<Competition> findAllRegisteredByContestantId(Long contestantId)
    + List<Contestant> findAllContestantsByCompetitionId(Long competitionId)
    + void updateRegistrationState(Long registrationId, RegistrationState state)
}
class OssService {
    + void uploadFile(byte[] data)
}
RegisterController --> CompetitionRegService
CompetitionRegService --> CompetitionRegRepository
CompetitionRegService --> OssService: 事件发布
@enduml